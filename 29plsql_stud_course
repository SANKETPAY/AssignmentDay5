29. C r e a t e t h e f o l l o w i n g t a b l e s : Student(roll-no, name, date-of-birth, course-
id)Course (Course-id, name, fee, duration, status)
(a) Create a form to accept the data from the user with appropriate validationchecks.
(b) Write PL/SQL procedure to do the following :Set the status of course to "not offered" in which
the number of candidates isless than 5
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Student and Course Form</title>
<style>
.error {
color: red;
}
</style>
</head>
<body>
<h2>Student and Course Form</h2>
<form action="process_data.php" method="post" onsubmit="return validateForm()">
<!-- Student Information -->
<label for="roll_no">Roll No:</label>
<input type="text" id="roll_no" name="roll_no" required><br>
<label for="name">Name:</label>
<input type="text" id="name" name="name" required><br>
<label for="dob">Date of Birth:</label>
<input type="date" id="dob" name="dob" required><br>
<label for="course_id">Course ID:</label>
<input type="text" id="course_id" name="course_id" required><br>
<!-- Course Information -->
<label for="course_name">Course Name:</label>
<input type="text" id="course_name" name="course_name" required><br>
<label for="fee">Fee:</label>
<input type="text" id="fee" name="fee" required><br>
<label for="duration">Duration:</label>
<input type="text" id="duration" name="duration" required><br>
<input type="submit" value="Submit">
</form>
<script>
function validateForm() {
// Implement your validation logic here
// For simplicity, a basic validation is added
var fee = document.getElementById("fee").value;
if (isNaN(fee) || fee <= 0) {
alert("Please enter a valid fee amount.");
return false;
}
// You can add more validation checks as needed
return true;
}
</script>
</body>
</html>
CREATE OR REPLACE PROCEDURE update_course_status (p_course_id IN VARCHAR2)
AS
v_candidate_count NUMBER;
BEGIN
-- Assuming there is a table named "Student" with a column "course_id"
SELECT COUNT(*) INTO v_candidate_count
FROM Student
WHERE course_id = p_course_id;
-- Set the course status to 'not offered' if the candidate count is less than 5
IF v_candidate_count < 5 THEN
UPDATE Course
SET status = 'not offered'
WHERE course_id = p_course_id;
COMMIT;
END IF;
END;
/
